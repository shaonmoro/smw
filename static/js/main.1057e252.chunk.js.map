{"version":3,"sources":["Authenticator/Setcode.jsx","Authenticator/Walletform.jsx","App.js","Authenticator/utils.js","index.js"],"names":["Setcode","id","className","onChange","e","props","setCode","target","value","onClick","this","sendCodeFirst","Component","Walletform","state","selected","setDirectionDeposit","event","a","preventDefault","setState","changeDirection","setDirectionWithdraw","setDirectionTransfer","balance","wrapCode","role","type","setAmount","disabled","setAddress","submit","keccak256","require","abiEncodePacked","str","num","str_hex","arr1","n","l","length","hex","Number","charCodeAt","toString","push","join","ascii_to_hexa","console","log","num_hex","s","numHex","App","onDeposit","contract","methods","deposit","send","from","accounts","web3","utils","toWei","amount","onWithdraw","withdraw","onTransfer","transfer","address","encodedCode","setPrivateCode","code","getRandomNumber","res","events","ranNum","returnValues","ran","parseInt","direction","getBalance","eth","_address","componentDidMount","document","title","Promise","resolve","reject","window","addEventListener","ethereum","Web3","enable","provider","providers","HttpProvider","getAccounts","net","getId","networkId","deployedNetwork","Wallet","networks","instance","Contract","abi","runExample","alert","error","storageValue","loading","Col","ReactDOM","render","getElementById"],"mappings":"kcAEqBA,E,iLACP,IAAD,OACL,OACA,6BACI,yBAAKC,GAAG,SAASC,UAAU,WAC3B,wBAAIA,UAAU,cAAd,mCAGA,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,2BAAjB,QACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACP,2BACAA,UAAU,eACVC,SAAU,SAACC,GAAD,OAAO,EAAKC,MAAMC,QAAQF,EAAEG,OAAOC,UAE7C,yBAAKN,UAAU,sBACX,4BACAA,UAAU,kBACVO,QAASC,KAAKL,MAAMM,eAFpB,kB,GAjBKC,aCAhBC,E,2MACjBC,MAAM,CACFC,SAAU,I,EAEdC,oB,uCAAqB,WAAMC,GAAN,SAAAC,EAAA,sDACjBD,EAAME,iBACN,EAAKC,SAAS,CAACL,SAAU,YACzB,EAAKV,MAAMgB,gBAAgB,WAHV,2C,wDAKrBC,qB,uCAAsB,WAAML,GAAN,SAAAC,EAAA,sDAClBD,EAAME,iBACN,EAAKC,SAAS,CAACL,SAAU,aACzB,EAAKV,MAAMgB,gBAAgB,YAHT,2C,wDAKtBE,qB,uCAAsB,WAAMN,GAAN,SAAAC,EAAA,sDAClBD,EAAME,iBACN,EAAKC,SAAS,CAACL,SAAU,aACzB,EAAKV,MAAMgB,gBAAgB,YAHT,2C,8HAOZ,IAAD,OACL,OACI,yBAAKpB,GAAG,SAASC,UAAU,QAC3B,wBAAIA,UAAU,cAAd,yBACA,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,2BAAjB,WACA,yBAAKA,UAAU,YACX,wBAAIA,UAAU,aAAaQ,KAAKL,MAAMmB,QAAtC,UAIR,yBAAKtB,UAAU,kBACX,2BAAOA,UAAU,2BAAjB,QACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACP,2BACAA,UAAU,eACVC,SAAU,SAACC,GAAD,OAAO,EAAKC,MAAMC,QAAQF,EAAEG,OAAOC,UAE7C,yBAAKN,UAAU,sBACX,4BACAA,UAAU,kBACVO,QAASC,KAAKL,MAAMoB,UAFpB,iBAUhB,yBAAKvB,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,YACX,yBAAKD,GAAG,YAAYC,UAAU,YAAYwB,KAAK,SAC3C,4BAAQC,KAAK,SACbzB,UAAS,0BAA6C,YAAxBQ,KAAKI,MAAMC,SAAyB,SAAW,IAC7EN,QAAWC,KAAKM,qBAFhB,WAIA,4BAAQW,KAAK,SACbzB,UAAS,0BAA6C,aAAxBQ,KAAKI,MAAMC,SAA0B,SAAW,IAC9EN,QAAUC,KAAKY,sBAFf,YAIA,4BAAQK,KAAK,SACbzB,UAAS,0BAA6C,aAAxBQ,KAAKI,MAAMC,SAA0B,SAAW,IAC9EN,QAAUC,KAAKa,sBAFf,eASZ,yBAAKrB,UAAU,kBACX,2BAAOA,UAAU,2BAAjB,UACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,eACjBC,SAAU,SAACC,GAAD,OAAO,EAAKC,MAAMuB,UAAUxB,EAAEG,OAAOC,UAE/C,yBAAKN,UAAU,sBACX,0BAAMA,UAAU,oBAAhB,WAMhB,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,2BAAmD,aAAxBQ,KAAKI,MAAMC,SAA0B,UAAY,IAC7F,yBAAKb,UAAU,YACX,2BAAOA,UAAU,eAChByB,KAAK,OACLE,SAAmC,aAAxBnB,KAAKI,MAAMC,SACtBZ,SAAU,SAACC,GAAD,OAAO,EAAKC,MAAMyB,WAAW1B,EAAEG,OAAOC,YASzD,yBAAKN,UAAU,cACX,4BAAQyB,KAAK,SACbzB,UAAU,kBACVO,QAASC,KAAKL,MAAM0B,QAFpB,gB,GAtGoBnB,aCKlCoB,EAAYC,EAAQ,KAuB1B,SAASC,EAAgBC,EAAKC,GAC5B,IAAIC,EArBN,SAAuBF,GAEtB,IADA,IAAIG,EAAO,GACFC,EAAI,EAAGC,EAAIL,EAAIM,OAAQF,EAAIC,EAAGD,IACnC,CACH,IAAIG,EAAMC,OAAOR,EAAIS,WAAWL,IAAIM,SAAS,IAC7CP,EAAKQ,KAAKJ,GAEX,OAAOJ,EAAKS,KAAK,IAcFC,CAAcb,GAC5Bc,QAAQC,IAAI,8BAAgCf,EAAM,SAAWC,GAC7D,IAAIe,EAbN,SAAgBC,GAET,IAAIlC,EAAIkC,EAAEP,SAAS,IAKnB,OAJK3B,EAAEuB,OAAS,EAAK,IACjBvB,EAAI,IAAMA,GAGPA,EAMEmC,CAAOjB,GACrBa,QAAQC,IAAI,6BAA+BC,GAC3C,IAEIT,EADI,KACML,EAFH,iEAEoBc,EAE/B,OADAF,QAAQC,IAAI,2BAA6BR,GAClCA,E,IAgNMY,E,YA5MX,WAAYjD,GAAO,IAAD,8BACd,4CAAMA,KAoBVkD,UArBkB,sBAqBN,sBAAArC,EAAA,sDACR,EAAKJ,MAAM0C,SAASC,QAAQC,UAAUC,KAClC,CACIC,KAAM,EAAK9C,MAAM+C,SAAS,GAC1BrD,MAAO,EAAKM,MAAMgD,KAAKC,MAAMC,MAAM,EAAKlD,MAAMmD,OAAOpB,WAAY,WAJjE,2CArBM,EA8BlBqB,WA9BkB,sBA8BL,sBAAAhD,EAAA,sDACT,EAAKJ,MAAM0C,SAASC,QAAQU,SACxB,EAAKrD,MAAMgD,KAAKC,MAAMC,MAAM,EAAKlD,MAAMmD,OAAOpB,WAAY,UAC5Dc,KAAK,CACHC,KAAM,EAAK9C,MAAM+C,SAAS,KAJrB,2CA9BK,EAsClBO,WAtCkB,sBAsCL,sBAAAlD,EAAA,sDACT,EAAKJ,MAAM0C,SAASC,QAAQY,SAAS,EAAKvD,MAAMwD,QAAS,EAAKxD,MAAMgD,KAAKC,MAAMC,MAAM,EAAKlD,MAAMmD,OAAOpB,WAAY,SAAU,EAAK/B,MAAMyD,aACvIZ,KAAK,CACFC,KAAM,EAAK9C,MAAM+C,SAAS,KAHrB,2CAtCK,EA6ClBlD,cA7CkB,sBA6CF,sBAAAO,EAAA,sDACZ,EAAKJ,MAAM0C,SAASC,QAAQe,eAAe,EAAK1D,MAAM2D,MAAMd,KAAK,CAC7DC,KAAM,EAAK9C,MAAM+C,SAAS,KAFlB,2CA7CE,EAoDlBpC,SApDkB,sBAoDR,kCAAAP,EAAA,sEACU,EAAKJ,MAAM0C,SAASC,QAAQiB,kBAAkBf,KAAK,CAC/DC,KAAM,EAAK9C,MAAM+C,SAAS,KAFxB,cACFc,EADE,gBAIUA,EAAIC,OAAOC,OAAOC,aAAaC,IAJzC,cAIFA,EAJE,OAKNA,EAAMC,SAASD,EAAK,IACpB,EAAK3D,SAAS,CAAC2D,QANT,UAOA9B,QAAQC,IAAIyB,GAPZ,yBAQA1B,QAAQC,IAAI6B,GARZ,QASFrC,EAAMR,EAAgB,EAAKpB,MAAM2D,KAAM,EAAK3D,MAAMiE,KAClDR,EAAcvC,EAAUU,GAC5BO,QAAQC,IAAIqB,EAAY1B,SAAS,QACjC,EAAKzB,SAAS,CAACmD,gBACftB,QAAQC,IAAIqB,GAbN,4CApDQ,EAqElBxC,OArEkB,uCAqEV,WAAMd,GAAN,SAAAC,EAAA,sDAEJD,EAAME,iBAEsB,YAAzB,EAAKL,MAAMmE,UACV,EAAK1B,YAEwB,aAAzB,EAAKzC,MAAMmE,UACf,EAAKf,aAEwB,aAAzB,EAAKpD,MAAMmE,WACf,EAAKb,aAXL,2CArEU,wDAoFlB/C,gBApFkB,uCAoFA,WAAM4D,GAAN,SAAA/D,EAAA,sDACG,YAAd+D,EACC,EAAK7D,SAAS,CAAC6D,UAAW,YAGR,aAAdA,EACJ,EAAK7D,SAAS,CAAC6D,UAAW,aAGR,aAAdA,GACJ,EAAK7D,SAAS,CAAC6D,UAAW,aAVhB,2CApFA,wDAmGlBC,WAnGkB,sBAmGL,4BAAAhE,EAAA,sEAEW,EAAKJ,MAAMgD,KAAKqB,IAAID,WAAW,EAAKpE,MAAM0C,SAAS4B,UAF9D,OAEL5D,EAFK,OAGTA,GAAoB,KACpB,EAAKJ,SAAS,CAACI,YAJN,2CAnGK,EA0GlBI,UA1GkB,uCA0GN,WAAMqC,GAAN,SAAA/C,EAAA,sDACR,EAAKE,SAAS,CAAC6C,WADP,2CA1GM,wDA+GlBnC,WA/GkB,uCA+GL,WAAMwC,GAAN,SAAApD,EAAA,sDACT,EAAKE,SAAS,CAACkD,YADN,2CA/GK,wDAoHlBhE,QApHkB,uCAoHR,WAAMmE,GAAN,SAAAvD,EAAA,sDACN,EAAKE,SAAS,CAACqD,SADT,2CApHQ,wDA4HlBY,kBA5HkB,sBA4HE,oCAAAnE,EAAA,6DAClBoE,SAASC,MAAQ,wBADC,kBCpKtB,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAA1E,EAAA,0DAE1ByE,OAAOE,SAFmB,wBAGtB/B,EAAO,IAAIgC,IAAKH,OAAOE,UAHD,kBAMpBF,OAAOE,SAASE,SANI,OAQ1BN,EAAQ3B,GARkB,gDAU1B4B,EAAO,EAAD,IAVoB,gCAcrBC,OAAO7B,MAERA,EAAO6B,OAAO7B,KACpBb,QAAQC,IAAI,2BACZuC,EAAQ3B,KAIFkC,EAAW,IAAIF,IAAKG,UAAUC,aAClC,yBAEIpC,EAAO,IAAIgC,IAAKE,GACtB/C,QAAQC,IAAI,gDACZuC,EAAQ3B,IA3BoB,6DDkKZ,cAKVA,EALU,gBAQOA,EAAKqB,IAAIgB,cARhB,cAQVtC,EARU,iBAWQC,EAAKqB,IAAIiB,IAAIC,QAXrB,QAWVC,EAXU,OAYVC,EAAkBC,EAAOC,SAASH,GAClCI,EAAW,IAAI5C,EAAKqB,IAAIwB,SAC1BH,EAAOI,IACPL,GAAmBA,EAAgBjC,SAKvC,EAAKlD,SAAS,CAAE0C,OAAMD,WAAUL,SAAUkD,GAAY,EAAKG,YApB3C,kDAuBhBC,MAAM,0EAGN7D,QAAQ8D,MAAR,MA1BgB,QA4BhB,EAAK7B,aACLjC,QAAQC,IAAI,EAAKpC,MAAM0C,UA7BP,0DA1HhB,EAAK1C,MAAQ,CACXkG,aAAc,EACdlD,KAAM,KACND,SAAU,KACVL,SAAU,KAEVyD,SAAS,EAETzF,QAAS,KACTyD,UAAW,GACXhB,OAAQ,EACRK,QAAS,GACTG,KAAM,GACNM,IAAK,EACLR,YAAa,MAhBD,E,sEAiKd,OAEI,yBAAKrE,UAAU,QACf,0BAAMA,UAAU,mBAEZ,yBAAKA,UAAU,OACX,kBAACgH,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,CACA5G,QAASI,KAAKJ,QACdK,cAAeD,KAAKC,iBAGxB,kBAACuG,EAAA,EAAD,OAGJ,yBAAKhH,UAAU,OACX,kBAACgH,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,CACA1F,QAASd,KAAKI,MAAMU,QACpByD,UAAWvE,KAAKL,MAAM4E,UACtB5D,gBAAiBX,KAAKW,gBACtBO,UAAWlB,KAAKkB,UAChBE,WAAYpB,KAAKoB,WACjBxB,QAASI,KAAKJ,QACdmB,SAAUf,KAAKe,SACfM,OAAQrB,KAAKqB,UAKjB,kBAACmF,EAAA,EAAD,a,GAlMFtG,aEpClBuG,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAAS+B,eAAe,U","file":"static/js/main.1057e252.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Setcode extends Component {\n    render() {\n        return (\n        <div>\n            <div id=\"wallet\" className=\"SetCode\">\n            <h2 className=\"card-title\">Set Code (for first time users)</h2>\n            \n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-4 col-form-label\">Code</label>\n                <div className=\"col-sm-8\">\n                    <div className=\"input-group mb-3\">\n                            <input \n                            className=\"form-control\"\n                            onChange={(e) => this.props.setCode(e.target.value)}\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                className=\"btn btn-primary\"\n                                onClick={this.props.sendCodeFirst}\n                                >Send</button>\n                            </div>\n                        </div>\n                </div>\n                \n            </div>\n\n           \n\n            </div>\n        </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class Walletform extends Component {\n    state={\n        selected: \"\",\n    }\n    setDirectionDeposit= async(event) => {\n        event.preventDefault();\n        this.setState({selected: \"deposit\"});\n        this.props.changeDirection(\"deposit\");\n    }\n    setDirectionWithdraw= async(event) => {\n        event.preventDefault();\n        this.setState({selected: \"withdraw\"})\n        this.props.changeDirection(\"withdraw\");\n    }\n    setDirectionTransfer= async(event) => {\n        event.preventDefault();\n        this.setState({selected: \"transfer\"})\n        this.props.changeDirection(\"transfer\");\n    }\n\n\n    render() {\n        return (\n            <div id=\"wallet\" className=\"card\">\n            <h2 className=\"card-title\">Smart Contract Wallet</h2>\n            <div className=\"form-group row\">\n                <label className=\"col-sm-4 col-form-label\">Balance</label>\n                <div className=\"col-sm-8\">\n                    <h2 className=\"text-left\">{this.props.balance} ETH</h2>  \n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-4 col-form-label\">Code</label>\n                <div className=\"col-sm-8\">\n                    <div className=\"input-group mb-3\">\n                            <input \n                            className=\"form-control\"\n                            onChange={(e) => this.props.setCode(e.target.value)}\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                className=\"btn btn-primary\"\n                                onClick={this.props.wrapCode}\n                                >Wrap code</button>\n                            </div>\n                        </div>\n                </div>\n                \n            </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-4 col-form-label\"></label>\n                    <div className=\"col-sm-8\">\n                        <div id=\"direction\" className=\"btn-group\" role=\"group\">\n                            <button type=\"submit\" \n                            className={`btn btn-primary ${this.state.selected === 'deposit' ? 'active' : ''}`}\n                            onClick = {this.setDirectionDeposit}\n                            >Deposit</button>\n                            <button type=\"submit\" \n                            className={`btn btn-primary ${this.state.selected === 'withdraw' ? 'active' : ''}`}\n                            onClick ={this.setDirectionWithdraw}\n                            >Withdraw</button>\n                            <button type=\"submit\"\n                            className={`btn btn-primary ${this.state.selected === 'transfer' ? 'active' : ''}`}\n                            onClick ={this.setDirectionTransfer}\n                            >Transfer</button>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-4 col-form-label\">Amount</label>\n                    <div className=\"col-sm-8\">\n                        <div className=\"input-group mb-3\">\n                            <input className=\"form-control\"\n                            onChange={(e) => this.props.setAmount(e.target.value)}\n                            />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text\">ETH</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-4 col-form-label\">{this.state.selected === \"transfer\" ? \"Address\" : \"\"}</label>\n                    <div className=\"col-sm-8\">\n                        <input className=\"form-control\"\n                         type=\"text\" \n                         disabled={ this.state.selected === 'transfer' ? false : true}\n                         onChange={(e) => this.props.setAddress(e.target.value)}\n                         />\n                    </div>\n                </div>\n\n                \n\n                \n\n                <div className=\"text-right\">\n                    <button type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={this.props.submit} \n                     >Submit</button>\n                </div>\n        </div>\n\n        );\n    }\n}","import React, { Component } from 'react'\nimport {Col} from 'react-bootstrap';\nimport {getWeb3} from \"./Authenticator/utils\";\nimport Wallet from \"./Authenticator/Wallet.json\"\nimport Setcode from \"./Authenticator/Setcode\";\nimport Walletform from \"./Authenticator/Walletform\"\n\nconst keccak256 = require('keccak256');\n\n\nfunction ascii_to_hexa(str){\n\tvar arr1 = [];\n\tfor (var n = 0, l = str.length; n < l; n ++) \n     {\n\t\tvar hex = Number(str.charCodeAt(n)).toString(16);\n\t\tarr1.push(hex);\n\t }\n\treturn arr1.join('');\n   }\n\nfunction numHex(s){\n\n       var a = s.toString(16);\n       if ((a.length % 2) > 0) {\n           a = \"0\" + a;\n       }\n       \n       return a;\n   }\n\nfunction abiEncodePacked(str, num){\n  var str_hex = ascii_to_hexa(str);\n  console.log(\"In abiEncodePacked string: \" + str + \" num: \" + num);\n  var num_hex = numHex(num);\n  console.log(\"In abiEcodePacked numhex: \" + num_hex);\n  var zero = \"00000000000000000000000000000000000000000000000000000000000000\";\n  var x = \"0x\";\n  var hex = x + str_hex + zero + num_hex;\n  console.log(\"In abiEncodePacked hex: \" + hex);\n  return hex;\n}\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n          storageValue: 0, \n          web3: null, \n          accounts: null, \n          contract: null,\n\n          loading: true,\n\n          balance: null,\n          direction: \"\",\n          amount: 0,\n          address: \"\",\n          code: \"\",\n          ran: 0,\n          encodedCode: null,\n\n        };\n    }\n\n    onDeposit = async() => {\n        this.state.contract.methods.deposit().send(\n            { \n                from: this.state.accounts[0],\n                value: this.state.web3.utils.toWei(this.state.amount.toString(), \"ether\")\n            }\n        )\n    }\n\n    onWithdraw = async() => {\n        this.state.contract.methods.withdraw(\n            this.state.web3.utils.toWei(this.state.amount.toString(), \"ether\")\n        ).send({\n            from: this.state.accounts[0],\n        });\n    }\n\n    onTransfer = async() => {\n        this.state.contract.methods.transfer(this.state.address, this.state.web3.utils.toWei(this.state.amount.toString(), \"ether\"), this.state.encodedCode)\n        .send({\n            from: this.state.accounts[0]\n        })\n    }\n\n    sendCodeFirst = async() => {\n        this.state.contract.methods.setPrivateCode(this.state.code).send({\n            from: this.state.accounts[0]\n        })\n\n    }\n\n    wrapCode= async() => {\n        let res = await this.state.contract.methods.getRandomNumber().send({\n            from: this.state.accounts[0]\n        });\n        let ran = await res.events.ranNum.returnValues.ran;\n        ran = parseInt(ran, 10);\n        this.setState({ran});\n        await console.log(res);\n        await console.log(ran);\n        let hex = abiEncodePacked(this.state.code, this.state.ran);\n        let encodedCode = keccak256(hex);\n        console.log(encodedCode.toString('hex'));\n        this.setState({encodedCode});\n        console.log(encodedCode);\n    }\n\n\n    submit= async(event) => {\n\n        event.preventDefault();\n\n        if(this.state.direction === \"deposit\"){\n            this.onDeposit();\n        }\n        else if(this.state.direction === \"withdraw\"){\n            this.onWithdraw();\n        }\n        else if(this.state.direction === \"transfer\"){\n            this.onTransfer();\n        }\n    }\n\n    changeDirection = async(direction) =>{\n        if(direction === \"deposit\"){\n            this.setState({direction: \"deposit\"})\n//            console.log(this.state.direction);\n        }\n        else if(direction === \"withdraw\"){\n            this.setState({direction: \"withdraw\"})\n//            console.log(this.state.direction);\n        }\n        else if(direction === \"transfer\"){\n            this.setState({direction: \"transfer\"})\n//            console.log(this.state.direction);\n        }\n    }\n\n    getBalance = async() =>{\n        //set to contract balance\n        let balance = await this.state.web3.eth.getBalance(this.state.contract._address);\n        balance = balance / 1000000000000000000;\n        this.setState({balance});\n    }\n\n    setAmount = async(amount) =>{\n        this.setState({amount});\n//        console.log(this.state.amount);\n    }\n\n    setAddress = async(address) =>{\n        this.setState({address});\n//        console.log(this.state.address);\n    }\n\n    setCode = async(code) =>{\n        this.setState({code});\n//        console.log(this.state.code);\n    }\n\n  \n    \n\n    componentDidMount = async () => {\n      document.title = \"Smart Contract Wallet\";\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Wallet.networks[networkId];\n        const instance = new web3.eth.Contract(\n            Wallet.abi,\n            deployedNetwork && deployedNetwork.address,\n        );\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        this.setState({ web3, accounts, contract: instance }, this.runExample);\n        } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\n            `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n        }\n        this.getBalance();\n        console.log(this.state.contract);\n \n    };\n\n    render() {\n\n      \n            \n        return (\n          \n            <div className=\"test\">\n            <main className=\"container-fluid\">\n          \n                <div className=\"row\">\n                    <Col/>\n                    <Col>\n                        <Setcode\n                        setCode={this.setCode}\n                        sendCodeFirst={this.sendCodeFirst}\n                        />\n                    </Col>\n                    <Col/>\n                </div>\n\n                <div className=\"row\">\n                    <Col/>\n                    <Col>\n                        <Walletform \n                        balance={this.state.balance}\n                        direction={this.props.direction}\n                        changeDirection={this.changeDirection}\n                        setAmount={this.setAmount}\n                        setAddress={this.setAddress}\n                        setCode={this.setCode}\n                        wrapCode={this.wrapCode}\n                        submit={this.submit}\n                        \n                        />\n\n                    </Col>\n                    <Col/>\n                </div>\n\n            </main>\n            </div>\n            \n            \n        )\n    }\n}\n\nexport default App;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport {getWeb3};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './scss/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}